win32:CONFIG += debug_and_release
macx:CONFIG -= app_bundle
CONFIG += warn_on

macx {
    macosx105 {
        QMAKE_LFLAGS += -isysroot /Developer/SDKs/MacOSX10.5.sdk
        QMAKE_CXXFLAGS += -isysroot /Developer/SDKs/MacOSX10.5.sdk
        QMAKE_CFLAGS += -isysroot /Developer/SDKs/MacOSX10.5.sdk
    }
    macosx32bit {
        QMAKE_LFLAGS += -m32 -arch i386
        QMAKE_CXXFLAGS += -m32 -arch i386
        QMAKE_CFLAGS += -m32 -arch i386
    }
    QMAKE_CXXFLAGS += -Wfatal-errors
    QMAKE_CFLAGS += -Wfatal-errors
    DEFINES += MAC_OS_X_VERSION_MAX_ALLOWED=1070
}

unix:!macx:QMAKE_CXXFLAGS_DEBUG += -ggdb
win32:QMAKE_CXXFLAGS += /MP
!win32:QMAKE_CXXFLAGS_RELEASE -= -O2
!win32:QMAKE_CXXFLAGS_RELEASE += -O3
!win32:QMAKE_CFLAGS_RELEASE -= -O2
!win32:QMAKE_CFLAGS_RELEASE += -O3
win32:DEFINES += _SCL_SECURE_NO_WARNINGS _CRT_SECURE_NO_WARNINGS
win32:QMAKE_CXXFLAGS_DEBUG -= /Zi
win32:QMAKE_CXXFLAGS_DEBUG += /ZI
win32:QMAKE_LFLAGS_DEBUG += /OPT:NOICF /OPT:NOREF
win32:QMAKE_LFLAGS_DEBUG += \
    /NODEFAULTLIB:LIBCPMT \ # LIBCPMT is linked by boost_serialization but we don't want it to, this row is required to link successfully
    /NODEFAULTLIB:LIBCMT \ # some other lib links LIBCMT and MSVCRT too, but LINK.EXE ignores them even without explicit NODEFAULTLIB
    /NODEFAULTLIB:MSVCRT \

win32:QMAKE_LFLAGS_RELEASE += \
    /NODEFAULTLIB:LIBCPMT \ # LIBCPMT is linked by boost_serialization but we don't want it to, this row is required to link successfully
    /NODEFAULTLIB:LIBCMT \ # some other lib links LIBCMT too, but LINK.EXE ignores it even without explicit NODEFAULTLIB

unix:!macx: QMAKE_CXX = colorgcc

profiling {
    # Profiling with gcc, gprof doesn't work with Os X 10.5 Leopard.
    !win32:QMAKE_CXXFLAGS_RELEASE += -pg
    !win32:QMAKE_LFLAGS_RELEASE += -pg
}

### Settings for using llvm instead of gcc on linux
llvm {
    QMAKE_CXX = llvm-g++
    QMAKE_CC = llvm-gcc
    QMAKE_LINK = llvm-g++
}

gcc-4.3 {
    QMAKE_CXX = g++-4.3
    QMAKE_CC = gcc-4.3
    QMAKE_LINK = g++-4.3
}

#gold-linker {
#    QMAKE_LINK = gold
#    QMAKE_LINK = ld
# TODO add system libraries which are included by g++-4.3, but not by 'gold' (nor 'ld'), could use output from compiling with "g++-4.3 -v"
#    QMAKE_LFLAGS += -L/usr/lib -L/usr/X11R6/lib -shared-libgcc -mtune=generic /usr/lib/gcc/x86_64-linux-gnu/4.3.4/collect2 --build-id --eh-frame-hdr -m elf_x86_64 --hash-style=both -dynamic-linker /lib64/ld-linux-x86-64.so.2 -o sonicawe -z relro /usr/lib/gcc/x86_64-linux-gnu/4.3.4/../../../../lib/crt1.o /usr/lib/gcc/x86_64-linux-gnu/4.3.4/../../../../lib/crti.o /usr/lib/gcc/x86_64-linux-gnu/4.3.4/crtbegin.o -L/usr/local/cuda/lib64 -L/usr/lib -L/usr/X11R6/lib -L../lib/gpumisc -L/usr/lib/gcc/x86_64-linux-gnu/4.3.4 -L/usr/lib/gcc/x86_64-linux-gnu/4.3.4 -L/usr/lib/gcc/x86_64-linux-gnu/4.3.4/../../../../lib -L/lib/../lib -L/usr/lib/../lib -L/usr/lib/gcc/x86_64-linux-gnu/4.3.4/../../.. -L/usr/lib/x86_64-linux-gnu
#}
